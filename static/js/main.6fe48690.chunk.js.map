{"version":3,"sources":["movieImages/fightClub.jpg","movieImages/darkKnight.jpg","movieImages/darkKnightRises.jpeg","movieImages/nightcrawler.jpg","movieImages/infinityWar.jpg","movieImages/theHouseThatJackBuilt.jpg","movieImages/unbreakable.jpg","movieImages/goneGirl.jpg","components/Movie.js","components/MoviesData.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Movie","props","react_default","a","createElement","className","src","img","alt","name","description","data","Fight Club","fightClub","title","Gone Girl","goneGirl","Infinity War","infinityWar","Nightcrawler","nightcrawler","The Dark Knight","darkKnight","The Dark Knight Rises","darkKnightRises","The House that Jack Built","theHouse","Unbreakable","unbreakable","Footer","message","href","link","author","App","state","query","searchText","event","_this","setState","target","value","_this2","this","movieImages","movieNames","movieDescriptions","Object","keys","forEach","key","push","filteredMovieNames","filter","movie","toLowerCase","indexOf","type","placeholder","onKeyUp","map","i","components_Movie","Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uOCazBC,SAXD,SAACC,GAEX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,IAAKC,IAAI,gBACzBN,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,KAAZ,KACAP,EAAAC,EAAAC,cAAA,aAAKH,EAAMS,YAAX,4IC8CGC,EA5CD,CACVC,aAAc,CACVL,IAAKM,IACLC,MAAO,aACPJ,YAAa,8ZAEjBK,YAAa,CACTR,IAAKS,IACLF,MAAO,YACPJ,YAAa,o0BAEjBO,eAAgB,CACZV,IAAKW,IACLJ,MAAO,eACPJ,YAAa,04BAGjBS,aAAgB,CACZZ,IAAKa,IACLN,MAAO,eACPJ,YAAa,ybAEjBW,kBAAmB,CACfd,IAAKe,IACLR,MAAO,kBACPJ,YAAa,0tBAEjBa,wBAAyB,CACrBhB,IAAKiB,IACLV,MAAO,wBACPJ,YAAa,4rBAEjBe,4BAA6B,CACzBlB,IAAKmB,IACLZ,MAAO,4BACPJ,YAAa,4fAEjBiB,YAAe,CACXpB,IAAKqB,IACLd,MAAO,cACPJ,YAAa,8tBChDRmB,EAAS,SAAC5B,GAEnB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,SAAIH,EAAM6B,QAAV,IAAmB5B,EAAAC,EAAAC,cAAA,KAAG2B,KAAM9B,EAAM+B,MAAO/B,EAAMgC,WCiD5CC,6MA/CbC,MAAQ,CACNC,MAAO,MAGTC,WAAa,SAACC,GACZC,EAAKC,SAAS,CACZJ,MAAOE,EAAMG,OAAOC,iFAIf,IAAAC,EAAAC,KAGHC,EAAc,GACdC,EAAa,GACbC,EAAoB,GAGxBC,OAAOC,KAAKtC,GAAMuC,QAAQ,SAAAC,GACxBN,EAAYO,KAAKzC,EAAKwC,GAAK5C,KAC3BuC,EAAWM,KAAKzC,EAAKwC,GAAKrC,OAC1BiC,EAAkBK,KAAKzC,EAAKwC,GAAKzC,eAGnC,IAAI2C,EAAqBP,EAAWQ,OAAQ,SAACC,GAC3C,OAA0D,IAAnDA,EAAMC,cAAcC,QAAQd,EAAKR,MAAMC,SAGhD,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOC,YAAY,WAAWC,QAAShB,KAAKP,cAG1DnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZgD,EAAmBQ,IAAI,SAACN,EAAOO,GAC9B,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAOxD,IAAKsC,EAAYC,EAAWW,QAAQF,IAAS9C,KAAM8C,EAAO7C,YAAaqC,EAAkBD,EAAWW,QAAQF,SAI9HrD,EAAAC,EAAAC,cAAC4D,EAAD,CAAQlC,QAAQ,WAAWG,OAAO,oBAAoBD,KAAK,gDA3CjDiC,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6fe48690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fightClub.b3defc07.jpg\";","module.exports = __webpack_public_path__ + \"static/media/darkKnight.2e897147.jpg\";","module.exports = __webpack_public_path__ + \"static/media/darkKnightRises.d88b828b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/nightcrawler.0eb6e9c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/infinityWar.236f2f0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theHouseThatJackBuilt.bd2b6102.jpg\";","module.exports = __webpack_public_path__ + \"static/media/unbreakable.f3343a7b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/goneGirl.e0cadb77.jpg\";","import React from 'react';\r\n\r\nconst Movie = (props) => {\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={props.img} alt=\"placeholder\"/>\r\n            <h2> {props.name} </h2>\r\n            <p> {props.description} </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movie;","\r\nimport fightClub from \"../movieImages/fightClub.jpg\";\r\nimport darkKnight from \"../movieImages/darkKnight.jpg\";\r\nimport darkKnightRises from \"../movieImages/darkKnightRises.jpeg\";\r\nimport nightcrawler from \"../movieImages/nightcrawler.jpg\";\r\nimport infinityWar from '../movieImages/infinityWar.jpg';\r\nimport theHouse from \"../movieImages/theHouseThatJackBuilt.jpg\";\r\nimport unbreakable from \"../movieImages/unbreakable.jpg\";\r\nimport goneGirl from \"../movieImages/goneGirl.jpg\";\r\n\r\nconst data  = {\r\n    \"Fight Club\": {\r\n        img: fightClub,\r\n        title: \"Fight Club\",\r\n        description: \"Fight Club is a 1999 film based on the 1996 novel by Chuck Palahniuk. It was directed by David Fincher and stars Brad Pitt, Edward Norton, and Helena Bonham Carter. Norton plays the unnamed narrator, who is discontent with his white-collar job. He forms a 'fight club' with soap salesman Tyler Durden (Pitt), and becomes embroiled in a relationship with him and a destitute woman, Marla Singer (Bonham Carter).\"\r\n    },\r\n    \"Gone Girl\": {\r\n        img: goneGirl,\r\n        title: \"Gone Girl\",\r\n        description: \"Gone Girl is a 2014 American psychological thriller film directed by David Fincher and written by Gillian Flynn, based on her 2012 novel of the same title. The film stars Ben Affleck, Rosamund Pike, Neil Patrick Harris, and Tyler Perry. Set in Missouri, the story begins as a mystery that follows the events surrounding Nick Dunne (Affleck), who becomes the primary suspect in the sudden disappearance of his wife, Amy (Pike). Rosamund Pike's performance was particularly praised, and she received nominations for an Academy Award, BAFTA Award, Golden Globe Award, and Screen Actors Guild Award for Best Actress. Additional nominations included a Golden Globe Award for Best Director for Fincher and Golden Globe Award, BAFTA, and Critics' Choice Award nominations for Flynn's adapted screenplay, receiving the award for the latter.\"\r\n    },\r\n    \"Infinity War\": {\r\n        img: infinityWar,\r\n        title: \"Infinity War\",\r\n        description: \"Avengers: Infinity War is a 2018 American superhero film based on the Marvel Comics superhero team the Avengers, produced by Marvel Studios and distributed by Walt Disney Studios Motion Pictures. It is the sequel to 2012's The Avengers and 2015's Avengers: Age of Ultron, and the nineteenth film in the Marvel Cinematic Universe (MCU). The film is directed by Anthony and Joe Russo, written by Christopher Markus and Stephen McFeely, and features an ensemble cast including Robert Downey Jr., Chris Hemsworth, Mark Ruffalo, Chris Evans, Scarlett Johansson, Benedict Cumberbatch, Don Cheadle, Tom Holland, Chadwick Boseman, Paul Bettany, Elizabeth Olsen, Anthony Mackie, Sebastian Stan, Danai Gurira, Letitia Wright, Dave Bautista, Zoe Saldana, Josh Brolin, and Chris Pratt. In the film, the Avengers and the Guardians of the Galaxy attempt to stop Thanos from amassing the all-powerful Infinity Stones.\"\r\n    },\r\n\r\n    \"Nightcrawler\": {\r\n        img: nightcrawler,\r\n        title: \"Nightcrawler\",\r\n        description: \"Nightcrawler is a 2014 American thriller film written and directed by Dan Gilroy in his feature directorial debut. It stars Jake Gyllenhaal as Louis Bloom, a stringer who records violent events late at night in Los Angeles and sells the footage to a local television news station. Rene Russo, Riz Ahmed, and Bill Paxton also star. A common theme in the film is the symbiotic relationship between unethical journalism and consumer demand.\"\r\n    },\r\n    \"The Dark Knight\": {\r\n        img: darkKnight,\r\n        title: \"The Dark Knight\",\r\n        description: \"The Dark Knight is a 2008 superhero film directed, co-produced, and co-written by Christopher Nolan. Based on the DC Comics character Batman, the film is the second installment of Nolan's The Dark Knight Trilogy and a sequel to 2005's Batman Begins, starring an ensemble cast including Christian Bale, Michael Caine, Heath Ledger, Gary Oldman, Aaron Eckhart, Maggie Gyllenhaal and Morgan Freeman. In the film, Bruce Wayne / Batman (Bale), Police Lieutenant James Gordon (Oldman) and District Attorney Harvey Dent (Eckhart) form an alliance to dismantle organized crime in Gotham City, but are menaced by an anarchist mastermind known as the Joker (Ledger), who seeks to undermine Batman's influence and turn the city to chaos.\"\r\n    },\r\n    \"The Dark Knight Rises\": {\r\n        img: darkKnightRises,\r\n        title: \"The Dark Knight Rises\",\r\n        description: \"The Dark Knight Rises is a 2012 American-British superhero film directed by Christopher Nolan, who co-wrote the screenplay with his brother Jonathan Nolan, and the story with David S. Goyer. Featuring the DC Comics character Batman, the film is the final installment in Nolan's The Dark Knight Trilogy, and the sequel to The Dark Knight (2008). Christian Bale stars as Bruce Wayne / Batman, alongside Michael Caine, Gary Oldman, Anne Hathaway, Tom Hardy, Marion Cotillard, Joseph Gordon-Levitt, and Morgan Freeman. Eight years after the events of The Dark Knight, merciless revolutionary Bane forces an older Bruce Wayne to resume his role as Batman and save Gotham City from nuclear destruction.\"\r\n    },\r\n    \"The House that Jack Built\": {\r\n        img: theHouse,\r\n        title: \"The House that Jack Built\",\r\n        description: \"The House That Jack Built is a 2018 psychological horror art film written and directed by Lars von Trier, starring Matt Dillon in the title role of Jack. The story follows Jack, a serial killer, over the course of 12 years in the 1970s and 1980s in the U.S. state of Washington. The film debuted at the Cannes Film Festival, marking von Trier's return to the festival after more than six years. It was given a single-day theatrical release on 28 November 2018 in the United States, and polarized critics.\"\r\n    },\r\n    \"Unbreakable\": {\r\n        img: unbreakable,\r\n        title: \"Unbreakable\",\r\n        description: \"Unbreakable is a 2000 American superhero thriller film written, produced, and directed by M. Night Shyamalan, and starring Bruce Willis and Samuel L. Jackson, alongside Robin Wright, Spencer Treat Clark, and Charlayne Woodard. It is the first installment in the Unbreakable film series. In Unbreakable, a security guard named David Dunn survives a horrific train crash.Shyamalan organized the narrative of Unbreakable to parallel a comic book's traditional three-part story structure. After settling on the origin story, Shyamalan wrote the screenplay as a speculative screenplay with Bruce Willis already set to star in the film and Jackson in mind to portray Elijah Price. Filming began in April 2000 and was completed in July.\"\r\n    }\r\n}\r\n\r\nexport default data;","import React from 'react';\r\n\r\nexport const Footer = (props) => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p>{props.message} <a href={props.link}>{props.author}</a></p>\r\n        </footer>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport Movie from './components/Movie'\r\nimport data from './components/MoviesData';\r\nimport { Footer } from './components/Footer';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    query: ''\r\n  }\r\n\r\n  searchText = (event) => {\r\n    this.setState({\r\n      query: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    /* array of movie details */\r\n    let movieImages = [];\r\n    let movieNames = [];\r\n    let movieDescriptions = [];\r\n\r\n    /* pushes each data value to the according array */\r\n    Object.keys(data).forEach(key => {\r\n      movieImages.push(data[key].img);\r\n      movieNames.push(data[key].title);\r\n      movieDescriptions.push(data[key].description);\r\n    });\r\n\r\n    let filteredMovieNames = movieNames.filter( (movie) => {\r\n      return movie.toLowerCase().indexOf(this.state.query) !== -1; \r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" placeholder=\"Search..\" onKeyUp={this.searchText}/>\r\n        </div>\r\n\r\n        <div className=\"movies-container\">\r\n          {filteredMovieNames.map((movie, i) => { \r\n            return <Movie img={movieImages[movieNames.indexOf(movie)]} name={movie} description={movieDescriptions[movieNames.indexOf(movie)]} />\r\n          })}\r\n        </div>\r\n\r\n        <Footer message=\"coded by\" author=\"Marcelo Mariduena\" link=\"https://github.com/marcelomariduena\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}